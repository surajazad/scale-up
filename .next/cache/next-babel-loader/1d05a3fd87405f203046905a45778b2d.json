{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass GoTop extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_isMounted\", false);\n\n    _defineProperty(this, \"onScrollStep\", () => {\n      this._isMounted = true;\n\n      if (window.pageYOffset === 0) {\n        clearInterval(this.state.intervalId);\n      }\n\n      window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\n    });\n\n    _defineProperty(this, \"scrollToTop\", () => {\n      this._isMounted = true;\n      let intervalId = setInterval(this.onScrollStep, this.props.delayInMs);\n      this.setState({\n        intervalId: intervalId\n      });\n    });\n\n    _defineProperty(this, \"renderGoTopIcon\", () => {\n      if (this.state.thePosition) {\n        return __jsx(\"div\", {\n          className: \"go-top\",\n          onClick: this.scrollToTop\n        }, __jsx(\"i\", {\n          className: \"bx bx-chevron-up\"\n        }), __jsx(\"i\", {\n          className: \"bx bx-chevron-up\"\n        }));\n      }\n    });\n\n    this.state = {\n      intervalId: 0,\n      thePosition: false\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    document.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 170) {\n        this.setState({\n          thePosition: true\n        });\n      } else {\n        this.setState({\n          thePosition: false\n        });\n      }\n    });\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, this.renderGoTopIcon());\n  }\n\n}\n\nexport default GoTop;","map":null,"metadata":{},"sourceType":"module"}