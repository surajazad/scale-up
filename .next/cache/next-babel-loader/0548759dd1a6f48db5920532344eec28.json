{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { QuizData } from '../QuizData/QuizData';\n\nconst Question = props => {\n  const totalNumberOfQuestions = QuizData.length;\n  let answerCount = 0; //const [ questionAndAnswer, setQuestionAndAnswer ] = useState([]); \n\n  const {\n    0: correctAnswerCount,\n    1: setCorrectAnswerCount\n  } = useState(0);\n  const {\n    0: allQuestionsAnswered,\n    1: setAllQuestionsAnswered\n  } = useState(false);\n\n  const clickHandler = (id, answerOption) => {\n    console.log('clicked item --->' + id, answerOption); // if(answerOption === '_first_option') {\n    //     const newElement = {\n    //         question: JSON.parse(JSON.stringify(QuizData[id-1].question)),\n    //         answerSelected: JSON.parse(JSON.stringify(QuizData[id-1].optionOne))\n    //     }\n    //     setQuestionAndAnswer(questionAndAnswer => [...questionAndAnswer, newElement]);\n    // } else if (answerOption === '_second_option') {\n    //     const newElement = {\n    //         question: JSON.parse(JSON.stringify(QuizData[id-1].question)),\n    //         answerSelected: JSON.parse(JSON.stringify(QuizData[id-1].optionTwo))\n    //     }\n    //     setQuestionAndAnswer(questionAndAnswer => [...questionAndAnswer, newElement]);\n    // } else if(answerOption === '_third_option') {\n    //     const newElement = {\n    //         question: JSON.parse(JSON.stringify(QuizData[id-1].question)),\n    //         answerSelected: JSON.parse(JSON.stringify(QuizData[id-1].optionThree))\n    //     }\n    //     setQuestionAndAnswer(questionAndAnswer => [...questionAndAnswer, newElement]);\n    // }\n\n    QuizData.forEach(question => {\n      console.log('prop value --->' + question.answerSelectedByUser);\n\n      if (question.id === id && question.correctAnswer === answerOption) {\n        question.answerSelectedByUser = true;\n        setCorrectAnswerCount(correctAnswerCount + 1);\n      }\n    });\n    QuizData.forEach(question => {\n      if (question.answerSelectedByUser === true) {\n        answerCount++;\n      }\n    }); //console.log('q-----'+JSON.stringify(QuizData[id]));\n\n    props.sendFormData({\n      \"answerCount\": answerCount,\n      \"correctAnswerCount\": correctAnswerCount\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"question-content\"\n  }, QuizData.map(item => {\n    const {\n      id,\n      heading,\n      leftBannerText,\n      optionOne,\n      optionTwo,\n      optionThree,\n      question\n    } = item;\n    return __jsx(\"div\", {\n      className: \"question-section\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-4 col-md-6\"\n    }, __jsx(\"div\", {\n      className: \"single-services\"\n    }, __jsx(\"p\", null, id, \"/\", totalNumberOfQuestions), __jsx(\"h3\", null, leftBannerText))), __jsx(\"div\", {\n      className: \"right-side-question-content\"\n    }, __jsx(\"div\", {\n      className: \"question-title\"\n    }, __jsx(\"h5\", null, heading)), __jsx(\"div\", {\n      className: \"question\"\n    }, __jsx(\"p\", null, question)), __jsx(\"div\", {\n      className: \"answer-options\"\n    }, __jsx(\"div\", {\n      className: \"option\"\n    }, __jsx(\"label\", {\n      for: \"one\"\n    }, __jsx(\"input\", {\n      onClick: () => clickHandler(id, '_first_option'),\n      type: \"radio\",\n      id: id,\n      name: id + \"-answer\",\n      value: \"1\"\n    }), optionOne)), __jsx(\"div\", {\n      className: \"option\"\n    }, __jsx(\"label\", {\n      for: \"two\"\n    }, __jsx(\"input\", {\n      onClick: () => clickHandler(id, '_second_option'),\n      type: \"radio\",\n      id: id,\n      name: id + \"-answer\",\n      value: \"2\"\n    }), optionTwo)), __jsx(\"div\", {\n      className: \"option\"\n    }, __jsx(\"label\", {\n      for: \"three\"\n    }, __jsx(\"input\", {\n      onClick: () => clickHandler(id, '_third_option'),\n      type: \"radio\",\n      id: id,\n      name: id + \"-answer\",\n      value: \"3\"\n    }), optionThree)))));\n  }));\n};\n\nexport default Question;","map":null,"metadata":{},"sourceType":"module"}